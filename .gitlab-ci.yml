image: danbla/fuglutestenv

services:
   - name: redis:latest
     alias: tmpRedisDB

stages:
  - build
  - test_isolated
  - test
  - documentation
  - deploy

unittests:
  stage: test
  script:
    - cd fuglu
    - nosetests-3.6 --rednose tests/unit

isolated:
  stage: test_isolated
  script:
    - cd fuglu
    - nosetests-3.6 --rednose tests/isolated  --with-isolation

integrationtests:
  stage: test
  script:
    - /usr/local/bin/start-services.sh
    - cd fuglu
    - nosetests-3.6 --rednose tests/integration


# define RSYNC_TARGET in gitlab -> project fuglu -> settings -> variables

buildfuglu:
  stage: build
  script:
    - cd fuglu
    - python3 setup.py build_py -d /tmp/build install --force
    - rename '.dist' '' /etc/fuglu/*.dist
    - mkdir -p /var/log/fuglu
    - chown nobody /var/log/fuglu

pages:
  image: alpine
  stage: documentation
  script:
    - mkdir public
    - apk --no-cache add python3 py3-pip python3-dev make
    - cd fuglu
    - python3 setup.py install
    - cd develop/doc
    - python3 make_sphinx_plugin_doc.py > ../../../documentation/source/includedplugins-autogen.txt
    - pip3 install sphinx
    - cd ../../../documentation
    - make html
    - mv _build/* ../public/
  artifacts:
    paths:
    - public
  only:
    - master
    - develop
    - milter


# deploy to local registry if the environment variable
# DEPLOY_ENV is set
docker_deploy:
  image: docker:19.03.1
  services:
    - docker:19.03.1-dind
  stage: deploy

  variables:
    DOCKER_TLS_CERTDIR: "/certs"
    CONTAINER_TEST_IMAGE: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
    CONTAINER_TEST_IMAGE_SHA: $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
    CONTAINER_RELEASE_IMAGE: $CI_REGISTRY_IMAGE:latest
  script:
    - 'echo "DEPLOY_ENV: $DEPLOY_ENV"'
    - 'echo "CI_COMMIT_REF_SLUG: $CI_COMMIT_REF_SLUG"'
    - 'echo "CI_COMMIT_SHA: $CI_COMMIT_SHA"'
    - sh $PWD/.gitlab-ci-deploy.sh
