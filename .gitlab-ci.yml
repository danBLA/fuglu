image: danbla/fuglutestenv

services:
   - name: redis:latest
     alias: tmpRedisDB

stages:
  - build
  - test_isolated
  - test
  - documentation
  - deploy

unittests:
  stage: test
  script:
    - cd fuglu
    - nosetests --rednose tests/unit

isolated:
  stage: test_isolated
  script:
    - cd fuglu
    - nosetests --rednose tests/isolated --with-isolation

unittests_py3:
  stage: test
  script:
    - cd fuglu
    - nosetests-3.6 --rednose tests/unit

isolated_py3:
  stage: test_isolated
  script:
    - cd fuglu
    - nosetests-3.6 --rednose tests/isolated  --with-isolation

integrationtests:
  stage: test
  script:
    - /usr/local/bin/start-services.sh
    - cd fuglu
    - nosetests --rednose tests/integration

integrationtests_py3:
  stage: test
  script:
    - /usr/local/bin/start-services.sh
    - cd fuglu
    - nosetests-3.6 --rednose tests/integration


# define RSYNC_TARGET in gitlab -> project fuglu -> settings -> variables

buildfuglu:
  stage: build
  script:
    - cd fuglu
    - python setup.py build_py -d /tmp/build install --force
    - rename '.dist' '' /etc/fuglu/*.dist
    - mkdir -p /var/log/fuglu
    - chown nobody /var/log/fuglu


buildfuglu_py3:
  stage: build
  script:
    - cd fuglu
    - python3 setup.py build_py -d /tmp/build install --force
    - rename '.dist' '' /etc/fuglu/*.dist
    - mkdir -p /var/log/fuglu
    - chown nobody /var/log/fuglu

pages:
  image: alpine
  stage: documentation
  script:
    - mkdir public
    - apk --no-cache add py2-pip python-dev make
    - cd fuglu
    - python setup.py install
    - cd develop/doc
    - ./make_sphinx_plugin_doc.py > ../../../documentation/source/includedplugins-autogen.txt
    - pip install sphinx
    - cd ../../../documentation
    - make html
    - mv _build/* ../public/
  artifacts:
    paths:
    - public
  only:
    - master
    - develop
    - milter

# manual deploy option in gitlab
docker_deploy:
  image: docker:19.03.1
  services:
    - docker:19.03.1-dind
  stage: deploy

  variables:
    DOCKER_TLS_CERTDIR: "/certs"
    CONTAINER_TEST_IMAGE: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
    CONTAINER_TEST_IMAGE_SHA: $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
    CONTAINER_RELEASE_IMAGE: $CI_REGISTRY_IMAGE:latest
  script:
    - 'echo "tag & push CONTAINER_TEST_IMAGE: ${CONTAINER_TEST_IMAGE}"'
    - 'echo ${CI_COMMIT_SHA} > fuglu.sha'
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker build --tag $CONTAINER_TEST_IMAGE -f docker/fuglu-testenv-contained/Dockerfile.alpine .
    - docker image ls | grep -w $CONTAINER_TEST_IMAGE
    - docker push $CONTAINER_TEST_IMAGE
  only:
    - stack
