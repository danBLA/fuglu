[main]

#identifier can be any string that helps you identifying your config file
#this helps making sure the correct config is loaded. this identifier will be printed out when fuglu is reloading its config
identifier=dist

# scantime logger disabled
# -> after enable also configure logger in logging.conf
scantimelogger = 1

#run as a daemon? (fork)
daemonize=0

#run as user
user=nobody

#run as group
group=nogroup

#comma separated list of directories in which fuglu searches for additional plugins and their dependencies
plugindir=

#what SCANNER plugins do we load, comma separated
plugins=archive,attachment,clamav,spamassassin

#what PREPENDER plugins do we load, comma separated
prependers=debug,skip

#what APPENDER plugins do we load, comma separated
#appender plugins are plugins run after the scanning plugins
#appenders will always be run, even if a a scanner plugin decided to delete/bounce/whatever a message
#(unless a mail is deferred in which case running the appender would not make sense as it will come again)
appenders=

#address fuglu should listen on. usually 127.0.0.1 so connections are accepted from local host only
bindaddress=0.0.0.0

#incoming port(s) (postfix connects here)
#you can use multiple comma separated ports here
#f.ex. to separate incoming and outgoing mail and a special port for debugging messages
#10025: standard incoming mail
#10028: standard milter port
#10888: debug port
incomingport=10025,10888,milter:10028

#outgoing hostname/ip where postfix is listening for re-injects.
#use ${injecthost} to connect back to the IP where the incoming connection came from
outgoinghost=127.0.0.1

#outgoing port  where postfix is listening for re-injects)
outgoingport=10026

##outgoing helo we should use for re-injects
#leave empty to auto-detect current hostname
outgoinghelo=

#temp dir where fuglu can store messages while scanning
tempdir=/tmp

#String to prepend to added headers
prependaddedheaders=X-Fuglu-

#If a plugin decides to delete a message, save a copy here
#default empty, eg. do not save a backup copy
trashdir=

#list all deleted messages in 00-fuglutrash.log in the trashdir
trashlog=0

#if this is set to True/1/yes , no Bounces will be sent from Fuglu eg. after a blocked attachment has been detected
#This may be used for debugging/testing to make sure fuglu can not produce backscatter
disablebounces=0

#write debug info header to every mail
debuginfoheader=0

#write a Spamstatus YES/NO header
spamstatusheader=1

#write suspect ID to every mail
suspectidheader=1

#write mrtg statistics
mrtgdir=

#port where fuglu provides statistics etc (used by fuglu_control). Can also be a path to a unix socket
controlport=/tmp/fuglu_control.sock

#Log pattern to use for all suspects in fuglu log. set empty string to disable logging generic suspect info. Supports the usual template variables plus: ${size}, ${spam} ${highspam}, ${modified} ${decision} ${tags} (short tags representagion) ${fulltags} full tags output, ${decision}
logtemplate=Suspect ${id} from=${from_address} to=${to_address} size=${size} spam=${spam} virus=${virus} modified=${modified} decision=${decision}

#warn about known severe problems/security issues of current version.
#Note: This performs a DNS lookup of gitrelease.patchlevel.minorversion.majorversion.versioncheck.fuglu.org on startup and fuglu --lint.
#No other information of any kind is transmitted to outside systems.
#Disable this if you consider the DNS lookup an unwanted information leak.
versioncheck=1

# Method to check mail address validity (Default/LazyLocalPart)
address_compliance_checker = Default

# Action to perform if address validity check fails (defer/reject/discard)
address_compliance_fail_action = defer

# Reply message if address validity check fails
address_compliance_fail_message = invalid send or receive address

# Remove temporary message file from disk for receive or address compliance errors
remove_tmpfiles_on_error = True

[PluginAlias]

debug=fuglu.plugins.p_debug.MessageDebugger
skip=fuglu.plugins.p_skipper.PluginSkipper
fraction=fuglu.plugins.p_fraction.PluginFraction
archive=fuglu.plugins.archive.ArchivePlugin
attachment=fuglu.plugins.attachment.FiletypePlugin
clamav=fuglu.plugins.clamav.ClamavPlugin
spamassassin=fuglu.plugins.sa.SAPlugin
vacation=fuglu.plugins.vacation.VacationPlugin
actionoverride=fuglu.plugins.actionoverride.ActionOverridePlugin
icap=fuglu.plugins.icap.ICAPPlugin
sssp=fuglu.plugins.sssp.SSSPPlugin
fprot=fuglu.plugins.fprot.FprotPlugin
scriptfilter=fuglu.plugins.script.ScriptFilter
dkimsign=fuglu.plugins.domainauth.DKIMSignPlugin
dkimverify=fuglu.plugins.domainauth.DKIMVerifyPlugin
spf=fuglu.plugins.domainauth.SPFPlugin
srs=fuglu.plugins.domainauth.SenderRewriteScheme

[milter]
# available options: readonly,manual,auto,tags,replace_demo
milter_mode=readonly

# available options: all,body,headers,from,to
milter_mode_options=

[databaseconfig]

#read runtime configuration values from a database. requires sqlalchemy to be installed
dbconnectstring=

#sql query that returns a configuration value override. sql placeholders are ':section',':option' in addition the usual suspect filter default values like ':to_domain', ':to_address' etc
#if the statement returns more than one row/value only the first value in the first row is used
sql=SELECT value FROM fugluconfig WHERE `section`=:section AND `option`=:option AND `scope` IN ('$GLOBAL',CONCAT('%',:to_domain),:to_address) ORDER BY `scope` DESC

[performance]

#minimum scanner threads
minthreads=2

#maximum scanner threads
maxthreads=40

#Method for parallelism, either 'thread' or 'process' 
backend=process

#Initial number of processes when backend='process'. If 0 (the default), automatically selects twice the number of available virtual cores. Despite its 'initial'-name, this number currently is not adapted automatically.
initialprocs=1

# Maximum cache size to keep attachemnts (archives extracted) per suspect during mail analysis (in bytes)
att_mgr_cachesize = 50000000

[spam]

#what to do with messages that plugins think are spam but  not so sure  ("low spam")
#in normal usage you probably never set this something other than DUNNO
#this is a DEFAULT action, eg. anti spam plugins should take this if you didn't set 
# a individual override
defaultlowspamaction=DUNNO

#what to do with messages if a plugin is sure it is spam ("high spam") 
#in after-queue mode this is probably still DUNNO or maybe DELETE for courageous people
#this is a DEFAULT action, eg. anti spam plugins should take this if you didn't set
# a individual override 
defaulthighspamaction=DUNNO

[smtpconnector]

#confirmation template sent back to the connecting postfix for accepted messages
requeuetemplate=FUGLU REQUEUE(${id}): ${injectanswer}

[environment]

#Distance to the boundary MTA ("how many received headers should fuglu skip to determine the last untrusted host information"). Only required if plugins need to have information about the last untrusted host(SPFPlugin)
boundarydistance=0

#Optional regex that should be applied to received headers to skip trusted (local) mta helo/ip/reverse dns.
#Only required if plugins need to have information about the last untrusted host and the message doesn't pass a fixed amount of hops to reach this system in your network
trustedhostsregex=

[esmtpconnector]

#confirmation template sent back to the connecting client for accepted messages
queuetemplate=${injectanswer}

#only deliver the message to the first recipient, ignore the others. This is useful in spamtrap setups where we don't want to create duplicate deliveries.
ignore_multiple_recipients=0

[virus]

##what to do with messages if a plugin detects a virus
#in after-queue mode this should probably be DELETE
#in pre-queue mode you could use REJECT
#this is a DEFAULT action, eg. anti-virus plugins should take this if you didn't set 
# a individual override
defaultvirusaction=DELETE





[PluginSkipper]

filterfile=/etc/fuglu/skipplugins.regex
